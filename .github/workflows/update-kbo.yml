name: Update KBO CSV daily

on:
  workflow_dispatch:
    inputs:
      since:
        description: "수집 시작일(YYYYMMDD)"
        required: false
        default: ""
      until:
        description: "수집 종료일(YYYYMMDD, 미지정 시 어제)"
        required: false
        default: ""
      force_refresh:
        description: "체크포인트 무시하고 새로 파싱"
        required: false
        default: "false"
  schedule:
    # KST(+9) 기준 분산 3회 (UTC로 기입)
    - cron: "40 14 * * *"   # 23:40 KST
    - cron: "10 16 * * *"   # 01:10 KST
    - cron: "20 18 * * *"   # 03:20 KST

permissions:
  contents: write

concurrency:
  group: kbo-csv-update
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Seoul
      PYTHONUNBUFFERED: "1"
      DEFAULT_LOOKBACK_DAYS: "5"      # 최근 5일
      DEFAULT_UNTIL_OFFSET_DAYS: "1"  # 종료일 = 어제

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install selenium beautifulsoup4 pandas numpy requests

      - name: Resolve date range
        id: ds
        shell: bash
        run: |
          IN_SINCE="${{ github.event.inputs.since }}"
          IN_UNTIL="${{ github.event.inputs.until }}"
          YEST=$(date -d "-${DEFAULT_UNTIL_OFFSET_DAYS} day" +%Y%m%d)
          SINCE_CALC=$(date -d "-${DEFAULT_LOOKBACK_DAYS} day" +%Y%m%d)
          if [ -z "$IN_SINCE" ]; then SINCE="$SINCE_CALC"; else SINCE="$IN_SINCE"; fi
          if [ -z "$IN_UNTIL" ]; then UNTIL="$YEST"; else UNTIL="$IN_UNTIL"; fi
          echo "since=$SINCE" >> $GITHUB_OUTPUT
          echo "until=$UNTIL" >> $GITHUB_OUTPUT
          echo "Resolved -> since=$SINCE until=$UNTIL"

      - name: Prepare dirs (static/cache & data)
        run: |
          mkdir -p static/cache
          mkdir -p data

      - name: Pre-check CSV (optional)
        run: |
          ls -lah data || true
          sed -n '1,8p' data/kbo_latest.csv || true

      - name: Run crawler (headless)
        # 실패 일시적일 수 있어 최대 2번 재시도
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 20
          max_attempts: 2
          command: |
            set -e
            SINCE="${{ steps.ds.outputs.since }}"
            UNTIL="${{ steps.ds.outputs.until }}"
            OUT="data/kbo_latest.csv"
            FORCE="${{ github.event.inputs.force_refresh }}"
            if [ "${FORCE}" = "true" ]; then EXTRA="--force_refresh"; else EXTRA=""; fi
            python KBO_crawl.py --since "$SINCE" --until "$UNTIL" --out "$OUT" $EXTRA
            echo "---- CSV HEAD ----"
            sed -n '1,12p' "$OUT" || true

      - name: Commit CSV if changed
        id: commit
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/kbo_latest.csv
          if git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes to commit."
          else
            git commit -m "chore(data): auto-update kbo_latest.csv [skip ci]"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Push
        if: steps.commit.outputs.changes == 'true'
        run: git push

      - name: Upload artifact (CSV)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kbo-csv
          path: data/kbo_latest.csv
          if-no-files-found: ignore

